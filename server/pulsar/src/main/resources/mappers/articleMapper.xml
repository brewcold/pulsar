<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hammer.pulsar.dao.ArticleDao">

    <!--  게시글 미리보기 조회 쿼리 결과 매퍼  -->
    <resultMap id="PreviewMapper" type="ArticlePreview">
        <result column="ID" property="articleNo" />
        <result column="NICKNAME" property="writerNickname" />
        <result column="TITLE" property="title" />
        <result column="REG_DATE" property="createdAt" />
        <result column="VIEW_CNT" property="viewCnt" />
        <result column="LIKE_CNT" property="recommendCnt" />
    </resultMap>

    <!--  게시글 상세보기 조회 쿼리 결과 매퍼  -->
    <resultMap id="ArticleMapper" type="Article">
        <result column="ID" property="articleNo" />
        <result column="TITLE" property="title" />
        <result column="WRITER_ID" property="writerInfo.writerNo" />
        <result column="SRC" property="writerInfo.writerImg" />
        <result column="NICKNAME" property="writerInfo.writerNickname" />
        <result column="CONTENT" property="body.content" />
        <result column="REG_DATE" property="createdAt" />
        <result column="MODIFY_DATE" property="modifiedAt" />
        <result column="VIEW_CNT" property="viewCnt" />
    </resultMap>

    <!--  새로운 게시글을 추가하는 SQL  -->
    <insert id="insertArticle" parameterType="ArticleWriteRequest" useGeneratedKeys="true" keyProperty="articleId">
        INSERT INTO TB_ARTICLE (TITLE, WRITER_ID, CONTENT, ROUTINE_ID)
        VALUES (#{title}, #{writerId}, #{content}, #{routineId})
    </insert>

    <!--  게시글 목록을 조회하는 SQL  -->
    <select id="selectArticles" parameterType="PaginationCriteria" resultMap="PreviewMapper">
        <if test="selectedTagId != null">
            <!--    검색어 태그를 포함하는 게시글의 번호들을 모은 테이블    -->
            WITH TAG_LIST AS (
                SELECT
                    DISTINCT ARTICLE_ID
                FROM TB_ARTICLE_TAG
                    WHERE TAG_ID = #{selectedTagId}
            )
        </if>
        <!--    검색조건에 일치하는 게시글을 조회하는 쿼리문    -->
        SELECT
            A.*,
            M.NICKNAME
        FROM TB_ARTICLE A
        INNER JOIN TB_MEMBER M
            ON A.WRITER_ID = M.ID
        <if test="selectedTagId != null">
            INNER JOIN TAG_LIST
                ON A.ID = TAG_LIST.ARTICLE_ID
        </if>
        <if test="lastArticleId != null">
            WHERE
                A.ID &lt; #{lastArticleId}
        </if>
        ORDER BY ID DESC
        LIMIT 10;
    </select>

    <!--  선택한 게시글을 상세 조회하는 SQL  -->
    <select id="selectArticleByArticleId" parameterType="int" resultMap="ArticleMapper">
        SELECT
            A.*,
            M.NICKNAME,
            M.SRC
        FROM TB_ARTICLE A
        INNER JOIN TB_MEMBER M
        ON
            A.WRITER_ID = M.ID
        WHERE
            A.ID = #{articleId}
    </select>

    <!--  선택한 회원의 게시글 목록을 조회하는 SQL  -->
    <select id="selectArticleByMemberId" parameterType="int" resultMap="PreviewMapper">
        SELECT
            A.*,
            M.NICKNAME
        FROM TB_ARTICLE A
        INNER JOIN TB_MEMBER M
        ON
            A.WRITER_ID = M.ID
        WHERE
            WRITER_ID = #{writerId}
    </select>

    <select id="selectArticlesByArticleId" parameterType="java.util.List" resultMap="PreviewMapper">
        SELECT
            A.*,
            M.NICKNAME
        FROM TB_ARTICLE A
        INNER JOIN TB_MEMBER M
        ON
            A.WRITER_ID = M.ID
        WHERE
            A.ID IN
            <foreach item="item" index="index" collection="list"
                               open="(" separator="," close=")" nullable="true">
                #{item}
            </foreach>
    </select>

    <!--  선택한 게시글을 수정하는 SQL  -->
    <update id="updateArticle" parameterType="ArticleModifyRequest">
        UPDATE TB_ARTICLE
        SET
            TITLE = #{title},
            CONTENT = #{content},
            MODIFY_DATE = NOW()
        WHERE
            ID = #{articleId}
    </update>

    <!--  게시글의 추천수를 조회하는 SQL  -->
    <select id="countLikes" parameterType="int" resultType="int">
        SELECT
            LIKE_CNT
        FROM
            TB_ARTICLE
        WHERE
            ID = #{articleId}
    </select>

    <!--  선택한 게시글의 추천수를 1 증가시키는 SQL  -->
    <update id="addLikes" parameterType="int">
        UPDATE TB_ARTICLE
        SET
            LIKE_CNT = LIKE_CNT + 1
        WHERE
            ID = #{articleId}
    </update>

    <!--  선택한 게시글의 추천수를 1 감소시키는 SQL  -->
    <update id="subtractLikes" parameterType="int">
        UPDATE TB_ARTICLE
        SET
            LIKE_CNT = LIKE_CNT - 1
        WHERE
            ID = #{articleId}
    </update>

    <!--  선택한 게시글의 조회수를 1 증가시키는 SQL  -->
    <update id="updateViewCnt" parameterType="int">
        UPDATE TB_ARTICLE
        SET
            VIEW_CNT = VIEW_CNT + 1
        WHERE
            ID = #{articleId}
    </update>

</mapper>